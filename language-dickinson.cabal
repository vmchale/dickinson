cabal-version:      2.2
name:               language-dickinson
version:            1.4.3.1
license:            BSD-3-Clause
license-file:       LICENSE
copyright:          Copyright: (c) 2020, 2022 Vanessa McHale
maintainer:         vamchale@gmail.com
author:             Vanessa McHale

synopsis:           A language for generative literature
description:        Dickinson is a language for generative (random) literature
category:           Language, Text, Compilers/Interpreters
build-type:         Simple
data-files:
    man/emd.1
    lib/*.dck
    prelude/*.dck
    lib/grammar/*.dck
    lib/fun/*.dck
    doc/user-guide.pdf

extra-source-files:
    test/data/*.pretty
    test/data/*.dck
    test/data/*.rename
    test/eval/*.dck
    test/error/*.dck
    test/demo/*.dck
    test/examples/*.dck
    examples/*.dck

extra-doc-files:
    README.md
    CHANGELOG.md

source-repository head
    type:     git
    location: https://github.com/vmchale/dickinson

flag cross
    description: Enable to ease cross-compiling
    default:     False
    manual:      True

flag zstd
    description: Use zstd to compress saved REPL states

common warnings
    default-language: Haskell2010
    ghc-options:
        -Wall
        -Wincomplete-uni-patterns -Wincomplete-record-updates
        -Wredundant-constraints -Widentities -Wmissing-export-lists
        -Wcpp-undef -Wunused-packages -Winvalid-haddock
        -Wno-x-partial

library
    import:           warnings
    exposed-modules:  Language.Dickinson
    hs-source-dirs:   public
    other-modules:    Paths_language_dickinson
    autogen-modules:  Paths_language_dickinson
    build-depends:
        base >=4.19.0.0 && <5,
        dickinson

    if !flag(cross)
        exposed-modules: Language.Dickinson.TH

    if !flag(cross)
        other-extensions: TemplateHaskellQuotes

    if !flag(cross)
        build-depends:
            template-haskell,
            text

library dickinson
    import:           warnings
    exposed-modules:
        Language.Dickinson.Lexer
        Language.Dickinson.Name
        Language.Dickinson.Type
        Language.Dickinson.TypeCheck
        Language.Dickinson.Parser
        Language.Dickinson.Rename
        Language.Dickinson.Rename.Amalgamate
        Language.Dickinson.Eval
        Language.Dickinson.Error
        Language.Dickinson.Check
        Language.Dickinson.Check.Scope
        Language.Dickinson.Check.Internal
        Language.Dickinson.Check.Pattern
        Language.Dickinson.Check.Duplicate
        Language.Dickinson.Check.Exhaustive
        Language.Dickinson.Unique
        Language.Dickinson.File
        Language.Dickinson.Pipeline
        Language.Dickinson.Import
        Language.Dickinson.Lib
        Language.Dickinson.Pattern.Useless
        Data.Tuple.Ext
        Control.Exception.Value
        Data.Text.Prettyprint.Doc.Ext

    hs-source-dirs:   src
    other-modules:
        Paths_language_dickinson
        Language.Dickinson.Lib.Get
        Language.Dickinson.Pattern
        Language.Dickinson.Check.Common
        Language.Dickinson.Probability
        Control.Monad.Ext
        Data.Foldable.Ext

    autogen-modules:  Paths_language_dickinson
    other-extensions:
        DeriveAnyClass DeriveFunctor DeriveGeneric FlexibleContexts
        FlexibleInstances GeneralizedNewtypeDeriving OverloadedStrings
        StandaloneDeriving TupleSections DeriveDataTypeable
        TransformListComp

    ghc-options:      -O2 -fstatic-argument-transformation

    build-depends:
        base >=4.9 && <5,
        array,
        bytestring,
        text >=1.0.0.0,
        mtl,
        transformers,
        containers,
        random,
        prettyprinter >=1.7.0,
        deepseq,
        microlens,
        microlens-mtl,
        composition-prelude >=2.0.0.0,
        binary >=0.8.4.0,
        filepath,
        directory,
        split

    if !flag(cross)
        build-tool-depends: alex:alex >=3.5.0.0, happy:happy >=2.1

executable emd
    import:           warnings
    main-is:          Main.hs
    hs-source-dirs:   run
    other-modules:
        REPL
        REPL.Save
        REPL.Completions
        Format
        Paths_language_dickinson

    autogen-modules:  Paths_language_dickinson
    other-extensions: FlexibleContexts OverloadedStrings TupleSections
    ghc-options:
        -rtsopts -with-rtsopts=-A4M -fstatic-argument-transformation

    build-depends:
        base,
        dickinson,
        optparse-applicative >=0.14.1.0,
        bytestring,
        prettyprinter,
        text,
        haskeline >=0.8,
        mtl,
        random,
        microlens-mtl >=0.1.8.0,
        microlens,
        containers,
        filepath,
        directory,
        language-dickinson,
        binary

    if !flag(cross)
        build-tool-depends: cpphs:cpphs

    if flag(zstd)
        cpp-options:   -DZSTD
        build-depends: zstd

test-suite dickinson-test
    import:           warnings
    type:             exitcode-stdio-1.0
    main-is:          Spec.hs
    hs-source-dirs:   test
    other-modules:
        Eval
        Golden
        TypeCheck
        TH

    other-extensions: OverloadedStrings TemplateHaskell
    ghc-options:      -threaded -rtsopts "-with-rtsopts=-N -K1K"

    build-depends:
        base,
        dickinson,
        tasty,
        tasty-hunit,
        bytestring,
        prettyprinter,
        text,
        filepath,
        tasty-golden,
        pretty-simple >=4.0.0.0,
        language-dickinson

benchmark dickinson-bench
    import:           warnings
    type:             exitcode-stdio-1.0
    main-is:          Bench.hs
    hs-source-dirs:   bench
    ghc-options:
        -rtsopts -with-rtsopts=-A4M -fstatic-argument-transformation

    build-depends:
        base,
        dickinson,
        binary,
        criterion,
        bytestring,
        text
